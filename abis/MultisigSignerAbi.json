{
    "abi": [
        {
            "type": "function",
            "name": "addOwner",
            "inputs": [
                {
                    "name": "keyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "ownerKeyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "eip712Domain",
            "inputs": [],
            "outputs": [
                {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                },
                {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getConfig",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "keyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "threshold",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "ownerKeyHashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initConfig",
            "inputs": [
                {
                    "name": "keyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "threshold",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "ownerKeyHashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isValidSignatureWithKeyHash",
            "inputs": [
                {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "keyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "signature",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "magicValue",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "removeOwner",
            "inputs": [
                {
                    "name": "keyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "ownerKeyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setThreshold",
            "inputs": [
                {
                    "name": "keyHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "threshold",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "error",
            "name": "ConfigAlreadySet",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidKeyHash",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidThreshold",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OwnerNotFound",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f5ffd5b50610c558061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c806384b0196e1161005857806384b0196e146100d05780638afc93b414610131578063a4db7b4d1461015d578063aa32d86b14610170575f5ffd5b806301faf36c1461007e5780632aca9072146100a85780632d2156b9146100bd575b5f5ffd5b61009161008c36600461076a565b610183565b60405161009f92919061079f565b60405180910390f35b6100bb6100b63660046107ec565b61021f565b005b6100bb6100cb3660046107ec565b61033f565b604080518082018252600e81526d26bab63a34a9b4b3a9b4b3b732b960911b602080830191909152825180840184526005815264302e302e3160d81b8183015283515f8082529281019485905261009f94600f60f81b94934692309261083a565b61014461013f36600461093c565b610377565b6040516001600160e01b0319909116815260200161009f565b6100bb61016b3660046107ec565b610586565b6100bb61017e3660046109eb565b6105d8565b6001600160a01b0382165f90815260208181526040808320848452825280832081518083018352815481526001820180548451818702810187019095528085526060958795939493858201939092909183018282801561020057602002820191905f5260205f20905b8154815260200190600101908083116101ec575b5050509190925250508151602090920151919791965090945050505050565b61022882610686565b335f9081526020818152604080832085845290915281206001810180549192909190805b828110156102ec578584828154811061026757610267610a90565b905f5260205f200154036102e45783610281600185610ab8565b8154811061029157610291610a90565b905f5260205f2001548482815481106102ac576102ac610a90565b905f5260205f200181905550838054806102c8576102c8610ad1565b600190038181905f5260205f20015f90559055600191506102ec565b60010161024c565b508061030b5760405163ae4575cd60e01b815260040160405180910390fd5b8354610318600184610ab8565b10156103375760405163aabd5a0960e01b815260040160405180910390fd5b505050505050565b61034882610686565b335f90815260208181526040808320948352938152928120600190810180549182018155825292902090910155565b5f5f8280602001905181019061038d9190610ae5565b335f90815260208181526040808320888452825280832081518083018352815481526001820180548451818702810187019095528085529697509495909491938581019392919083018282801561040157602002820191905f5260205f20905b8154815260200190600101908083116103ed575b50505050508152505090505f5f5b835181101561056f575f5f336001600160a01b0316630cef73b48b88868151811061043c5761043c610a90565b60200260200101516040518363ffffffff1660e01b8152600401610461929190610bd6565b6040805180830381865afa15801561047b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049f9190610bf6565b91509150816104af575050610567565b5f5b85602001515181101561053f5781866020015182815181106104d5576104d5610a90565b60200260200101510361053757846104ec81610c26565b9550505f5f1b8660200151828151811061050857610508610a90565b60209081029190910101528551850361053257506322bf24ed60e21b965061057f95505050505050565b61053f565b6001016104b1565b856020015151810361056357506001600160e01b0319965061057f95505050505050565b5050505b60010161040f565b506001600160e01b031993505050505b9392505050565b61058f82610686565b335f9081526020818152604080832085845290915290208115806105b65750600181015482115b156105d45760405163aabd5a0960e01b815260040160405180910390fd5b5550565b8115806105e55750805182115b156106035760405163aabd5a0960e01b815260040160405180910390fd5b335f90815260208181526040808320868452909152902080541561063a5760405163c7c5196560e01b815260040160405180910390fd5b6040805180820182528481526020808201858152335f908152808352848120898252835293909320825181559251805192939261067d926001850192019061070d565b50505050505050565b5f336001600160a01b031663be766d156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e79190610c3e565b9050818114610709576040516381255f6d60e01b815260040160405180910390fd5b5050565b828054828255905f5260205f20908101928215610746579160200282015b8281111561074657825182559160200191906001019061072b565b50610752929150610756565b5090565b5b80821115610752575f8155600101610757565b5f5f6040838503121561077b575f5ffd5b82356001600160a01b0381168114610791575f5ffd5b946020939093013593505050565b5f60408201848352604060208401528084518083526060850191506020860192505f5b818110156107e05783518352602093840193909201916001016107c2565b50909695505050505050565b5f5f604083850312156107fd575f5ffd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201525f61085860e083018961080c565b828103604084015261086a818961080c565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156108bf5783518352602093840193909201916001016108a1565b50909b9a5050505050505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561090d5761090d6108d0565b604052919050565b5f67ffffffffffffffff82111561092e5761092e6108d0565b50601f01601f191660200190565b5f5f5f6060848603121561094e575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610972575f5ffd5b8401601f81018613610982575f5ffd5b803561099561099082610915565b6108e4565b8181528760208385010111156109a9575f5ffd5b816020840160208301375f602083830101528093505050509250925092565b5f67ffffffffffffffff8211156109e1576109e16108d0565b5060051b60200190565b5f5f5f606084860312156109fd575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610a21575f5ffd5b8401601f81018613610a31575f5ffd5b8035610a3f610990826109c8565b8082825260208201915060208360051b850101925088831115610a60575f5ffd5b6020840193505b82841015610a82578335825260209384019390910190610a67565b809450505050509250925092565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610acb57610acb610aa4565b92915050565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215610af5575f5ffd5b815167ffffffffffffffff811115610b0b575f5ffd5b8201601f81018413610b1b575f5ffd5b8051610b29610990826109c8565b8082825260208201915060208360051b850101925086831115610b4a575f5ffd5b602084015b83811015610bcb57805167ffffffffffffffff811115610b6d575f5ffd5b8501603f81018913610b7d575f5ffd5b6020810151610b8e61099082610915565b8181526040838301018b1015610ba2575f5ffd5b8160408401602083015e5f60208383010152808652505050602083019250602081019050610b4f565b509695505050505050565b828152604060208201525f610bee604083018461080c565b949350505050565b5f5f60408385031215610c07575f5ffd5b82518015158114610c16575f5ffd5b6020939093015192949293505050565b5f60018201610c3757610c37610aa4565b5060010190565b5f60208284031215610c4e575f5ffd5b505191905056",
        "sourceMap": "289:8720:66:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f5ffd5b506004361061007a575f3560e01c806384b0196e1161005857806384b0196e146100d05780638afc93b414610131578063a4db7b4d1461015d578063aa32d86b14610170575f5ffd5b806301faf36c1461007e5780632aca9072146100a85780632d2156b9146100bd575b5f5ffd5b61009161008c36600461076a565b610183565b60405161009f92919061079f565b60405180910390f35b6100bb6100b63660046107ec565b61021f565b005b6100bb6100cb3660046107ec565b61033f565b604080518082018252600e81526d26bab63a34a9b4b3a9b4b3b732b960911b602080830191909152825180840184526005815264302e302e3160d81b8183015283515f8082529281019485905261009f94600f60f81b94934692309261083a565b61014461013f36600461093c565b610377565b6040516001600160e01b0319909116815260200161009f565b6100bb61016b3660046107ec565b610586565b6100bb61017e3660046109eb565b6105d8565b6001600160a01b0382165f90815260208181526040808320848452825280832081518083018352815481526001820180548451818702810187019095528085526060958795939493858201939092909183018282801561020057602002820191905f5260205f20905b8154815260200190600101908083116101ec575b5050509190925250508151602090920151919791965090945050505050565b61022882610686565b335f9081526020818152604080832085845290915281206001810180549192909190805b828110156102ec578584828154811061026757610267610a90565b905f5260205f200154036102e45783610281600185610ab8565b8154811061029157610291610a90565b905f5260205f2001548482815481106102ac576102ac610a90565b905f5260205f200181905550838054806102c8576102c8610ad1565b600190038181905f5260205f20015f90559055600191506102ec565b60010161024c565b508061030b5760405163ae4575cd60e01b815260040160405180910390fd5b8354610318600184610ab8565b10156103375760405163aabd5a0960e01b815260040160405180910390fd5b505050505050565b61034882610686565b335f90815260208181526040808320948352938152928120600190810180549182018155825292902090910155565b5f5f8280602001905181019061038d9190610ae5565b335f90815260208181526040808320888452825280832081518083018352815481526001820180548451818702810187019095528085529697509495909491938581019392919083018282801561040157602002820191905f5260205f20905b8154815260200190600101908083116103ed575b50505050508152505090505f5f5b835181101561056f575f5f336001600160a01b0316630cef73b48b88868151811061043c5761043c610a90565b60200260200101516040518363ffffffff1660e01b8152600401610461929190610bd6565b6040805180830381865afa15801561047b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049f9190610bf6565b91509150816104af575050610567565b5f5b85602001515181101561053f5781866020015182815181106104d5576104d5610a90565b60200260200101510361053757846104ec81610c26565b9550505f5f1b8660200151828151811061050857610508610a90565b60209081029190910101528551850361053257506322bf24ed60e21b965061057f95505050505050565b61053f565b6001016104b1565b856020015151810361056357506001600160e01b0319965061057f95505050505050565b5050505b60010161040f565b506001600160e01b031993505050505b9392505050565b61058f82610686565b335f9081526020818152604080832085845290915290208115806105b65750600181015482115b156105d45760405163aabd5a0960e01b815260040160405180910390fd5b5550565b8115806105e55750805182115b156106035760405163aabd5a0960e01b815260040160405180910390fd5b335f90815260208181526040808320868452909152902080541561063a5760405163c7c5196560e01b815260040160405180910390fd5b6040805180820182528481526020808201858152335f908152808352848120898252835293909320825181559251805192939261067d926001850192019061070d565b50505050505050565b5f336001600160a01b031663be766d156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e79190610c3e565b9050818114610709576040516381255f6d60e01b815260040160405180910390fd5b5050565b828054828255905f5260205f20908101928215610746579160200282015b8281111561074657825182559160200191906001019061072b565b50610752929150610756565b5090565b5b80821115610752575f8155600101610757565b5f5f6040838503121561077b575f5ffd5b82356001600160a01b0381168114610791575f5ffd5b946020939093013593505050565b5f60408201848352604060208401528084518083526060850191506020860192505f5b818110156107e05783518352602093840193909201916001016107c2565b50909695505050505050565b5f5f604083850312156107fd575f5ffd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201525f61085860e083018961080c565b828103604084015261086a818961080c565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b818110156108bf5783518352602093840193909201916001016108a1565b50909b9a5050505050505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561090d5761090d6108d0565b604052919050565b5f67ffffffffffffffff82111561092e5761092e6108d0565b50601f01601f191660200190565b5f5f5f6060848603121561094e575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610972575f5ffd5b8401601f81018613610982575f5ffd5b803561099561099082610915565b6108e4565b8181528760208385010111156109a9575f5ffd5b816020840160208301375f602083830101528093505050509250925092565b5f67ffffffffffffffff8211156109e1576109e16108d0565b5060051b60200190565b5f5f5f606084860312156109fd575f5ffd5b8335925060208401359150604084013567ffffffffffffffff811115610a21575f5ffd5b8401601f81018613610a31575f5ffd5b8035610a3f610990826109c8565b8082825260208201915060208360051b850101925088831115610a60575f5ffd5b6020840193505b82841015610a82578335825260209384019390910190610a67565b809450505050509250925092565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610acb57610acb610aa4565b92915050565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215610af5575f5ffd5b815167ffffffffffffffff811115610b0b575f5ffd5b8201601f81018413610b1b575f5ffd5b8051610b29610990826109c8565b8082825260208201915060208360051b850101925086831115610b4a575f5ffd5b602084015b83811015610bcb57805167ffffffffffffffff811115610b6d575f5ffd5b8501603f81018913610b7d575f5ffd5b6020810151610b8e61099082610915565b8181526040838301018b1015610ba2575f5ffd5b8160408401602083015e5f60208383010152808652505050602083019250602081019050610b4f565b509695505050505050565b828152604060208201525f610bee604083018461080c565b949350505050565b5f5f60408385031215610c07575f5ffd5b82518015158114610c16575f5ffd5b6020939093015192949293505050565b5f60018201610c3757610c37610aa4565b5060010190565b5f60208284031215610c4e575f5ffd5b505191905056",
        "sourceMap": "289:8720:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:278;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4256:852;;;;;;:::i;:::-;;:::i;:::-;;3788:217;;;;;;:::i;:::-;;:::i;6062:608::-;6471:23;;;;;;;;;;;-1:-1:-1;;;6471:23:66;;;;;;;;6504:17;;;;;;;;;;-1:-1:-1;;;6504:17:66;;;;6647:16;;-1:-1:-1;6647:16:66;;;;;;;;;;6062:608;;-1:-1:-1;;;6384:16:66;6471:23;6541:13;;6592:4;;6062:608;:::i;7369:1638::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4699:33:89;;;4681:52;;4669:2;4654:18;7369:1638:66;4537:202:89;5276:307:66;;;;;;:::i;:::-;;:::i;3124:546::-;;;;;;:::i;:::-;;:::i;2145:278::-;-1:-1:-1;;;;;2332:17:66;;2243;2332;;;;;;;;;;;:26;;;;;;;;2309:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:31;;2243:17;;2309:49;;2332:26;2309:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2309:49:66;;;;-1:-1:-1;;2376:16:66;;2394:21;;;;;2376:16;;2394:21;;-1:-1:-1;2145:278:66;;-1:-1:-1;;;;;2145:278:66:o;4256:852::-;4333:22;4347:7;4333:13;:22::i;:::-;4399:10;4366:21;4390:20;;;;;;;;;;;:29;;;;;;;;4465:21;;;4520:22;;4390:29;;4465:21;;4520:22;4366:21;4582:398;4606:13;4602:1;:17;4582:398;;;4666:12;4644:15;4660:1;4644:18;;;;;;;;:::i;:::-;;;;;;;;;:34;4640:330;;4786:15;4802:17;4818:1;4802:13;:17;:::i;:::-;4786:34;;;;;;;;:::i;:::-;;;;;;;;;4765:15;4781:1;4765:18;;;;;;;;:::i;:::-;;;;;;;;:55;;;;4881:15;:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4928:4;4920:12;;4950:5;;4640:330;4621:3;;4582:398;;;;4995:5;4990:34;;5009:15;;-1:-1:-1;;;5009:15:66;;;;;;;;;;;4990:34;5058:16;;5038:17;5054:1;5038:13;:17;:::i;:::-;:36;5034:67;;;5083:18;;-1:-1:-1;;;5083:18:66;;;;;;;;;;;5034:67;4323:785;;;;4256:852;;:::o;3788:217::-;3862:22;3876:7;3862:13;:22::i;:::-;3928:10;3895:21;3919:20;;;;;;;;;;;:29;;;;;;;;;3958:21;;;;:40;;;;;;;;;;;;;;;;3788:217::o;7369:1638::-;7508:17;7541:25;7580:9;7569:32;;;;;;;;;;;;:::i;:::-;7643:10;7611:20;7634;;;;;;;;;;;:29;;;;;;;;7611:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7541:60;;-1:-1:-1;7611:20:66;;:52;;7634:29;;7611:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7674:19;7769:9;7764:1138;7784:10;:17;7780:1;:21;7764:1138;;;7873:12;7887:20;7942:10;-1:-1:-1;;;;;7927:53:66;;7981:6;7989:10;8000:1;7989:13;;;;;;;;:::i;:::-;;;;;;;7927:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7872:131;;;;8023:7;8018:55;;8050:8;;;;8018:55;8087:9;8110:621;8121:6;:21;;;:28;8117:1;:32;8110:621;;;8201:12;8173:6;:21;;;8195:1;8173:24;;;;;;;;:::i;:::-;;;;;;;:40;8169:476;;8285:13;;;;:::i;:::-;;;;8409:1;8401:10;;8374:6;:21;;;8396:1;8374:24;;;;;;;;:::i;:::-;;;;;;;;;;:37;8513:16;;8498:31;;8494:105;;-1:-1:-1;;;;8564:12:66;-1:-1:-1;8557:19:66;;-1:-1:-1;;;;;;8557:19:66;8494:105;8621:5;;8169:476;8695:3;;8110:621;;;8811:6;:21;;;:28;8806:1;:33;8802:90;;-1:-1:-1;;;;;;;8866:11:66;-1:-1:-1;8859:18:66;;-1:-1:-1;;;;;;8859:18:66;8802:90;7808:1094;;;7764:1138;7803:3;;7764:1138;;;-1:-1:-1;;;;;;;8989:11:66;-1:-1:-1;;;;7369:1638:66;;;;;;:::o;5276:307::-;5351:22;5365:7;5351:13;:22::i;:::-;5417:10;5384:21;5408:20;;;;;;;;;;;:29;;;;;;;;5452:14;;;:58;;-1:-1:-1;5482:21:66;;;:28;5470:40;;5452:58;5448:89;;;5519:18;;-1:-1:-1;;;5519:18:66;;;;;;;;;;;5448:89;5548:28;-1:-1:-1;5276:307:66:o;3124:546::-;3318:14;;;:51;;;3348:14;:21;3336:9;:33;3318:51;3314:82;;;3378:18;;-1:-1:-1;;;3378:18:66;;;;;;;;;;;3314:82;3440:10;3407:21;3431:20;;;;;;;;;;;:29;;;;;;;;3475:16;;:20;3471:76;;3518:18;;-1:-1:-1;;;3518:18:66;;;;;;;;;;;3471:76;3601:62;;;;;;;;;;;;;;;;;;3566:10;-1:-1:-1;3557:20:66;;;;;;;;;:29;;;;;;;;;:106;;;;;;;;3601:62;;3557:29;:106;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;3124:546:66:o;2703:208::-;2775:15;2808:10;-1:-1:-1;;;;;2793:44:66;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2775:64;;2864:15;2853:7;:26;2849:55;;2888:16;;-1:-1:-1;;;2888:16:66;;;;;;;;;;;2849:55;2765:146;2703:208;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:406:89;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:89;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;384:2;369:18;;;;356:32;;-1:-1:-1;;;14:406:89:o;425:682::-;595:4;643:2;632:9;628:18;673:6;662:9;655:25;716:2;711;700:9;696:18;689:30;739:6;774;768:13;805:6;797;790:22;843:2;832:9;828:18;821:25;;881:2;873:6;869:15;855:29;;902:1;912:169;926:6;923:1;920:13;912:169;;;987:13;;975:26;;1030:2;1056:15;;;;1021:12;;;;948:1;941:9;912:169;;;-1:-1:-1;1098:3:89;;425:682;-1:-1:-1;;;;;;425:682:89:o;1112:346::-;1180:6;1188;1241:2;1229:9;1220:7;1216:23;1212:32;1209:52;;;1257:1;1254;1247:12;1209:52;-1:-1:-1;;1302:23:89;;;1422:2;1407:18;;;1394:32;;-1:-1:-1;1112:346:89:o;1463:289::-;1505:3;1543:5;1537:12;1570:6;1565:3;1558:19;1626:6;1619:4;1612:5;1608:16;1601:4;1596:3;1592:14;1586:47;1678:1;1671:4;1662:6;1657:3;1653:16;1649:27;1642:38;1741:4;1734:2;1730:7;1725:2;1717:6;1713:15;1709:29;1704:3;1700:39;1696:50;1689:57;;;1463:289;;;;:::o;1757:1238::-;2163:3;2158;2154:13;2146:6;2142:26;2131:9;2124:45;2205:3;2200:2;2189:9;2185:18;2178:31;2105:4;2232:46;2273:3;2262:9;2258:19;2250:6;2232:46;:::i;:::-;2326:9;2318:6;2314:22;2309:2;2298:9;2294:18;2287:50;2360:33;2386:6;2378;2360:33;:::i;:::-;2424:2;2409:18;;2402:34;;;-1:-1:-1;;;;;2473:32:89;;2467:3;2452:19;;2445:61;2493:3;2522:19;;2515:35;;;2587:22;;;2581:3;2566:19;;2559:51;2659:13;;2681:22;;;2731:2;2757:15;;;;-1:-1:-1;2719:15:89;;;;-1:-1:-1;2800:169:89;2814:6;2811:1;2808:13;2800:169;;;2875:13;;2863:26;;2918:2;2944:15;;;;2909:12;;;;2836:1;2829:9;2800:169;;;-1:-1:-1;2986:3:89;;1757:1238;-1:-1:-1;;;;;;;;;;;1757:1238:89:o;3000:127::-;3061:10;3056:3;3052:20;3049:1;3042:31;3092:4;3089:1;3082:15;3116:4;3113:1;3106:15;3132:275;3203:2;3197:9;3268:2;3249:13;;-1:-1:-1;;3245:27:89;3233:40;;3303:18;3288:34;;3324:22;;;3285:62;3282:88;;;3350:18;;:::i;:::-;3386:2;3379:22;3132:275;;-1:-1:-1;3132:275:89:o;3412:186::-;3460:4;3493:18;3485:6;3482:30;3479:56;;;3515:18;;:::i;:::-;-1:-1:-1;3581:2:89;3560:15;-1:-1:-1;;3556:29:89;3587:4;3552:40;;3412:186::o;3603:929::-;3689:6;3697;3705;3758:2;3746:9;3737:7;3733:23;3729:32;3726:52;;;3774:1;3771;3764:12;3726:52;3819:23;;;-1:-1:-1;3939:2:89;3924:18;;3911:32;;-1:-1:-1;4020:2:89;4005:18;;3992:32;4047:18;4036:30;;4033:50;;;4079:1;4076;4069:12;4033:50;4102:22;;4155:4;4147:13;;4143:27;-1:-1:-1;4133:55:89;;4184:1;4181;4174:12;4133:55;4224:2;4211:16;4249:52;4265:35;4293:6;4265:35;:::i;:::-;4249:52;:::i;:::-;4324:6;4317:5;4310:21;4372:7;4367:2;4358:6;4354:2;4350:15;4346:24;4343:37;4340:57;;;4393:1;4390;4383:12;4340:57;4448:6;4443:2;4439;4435:11;4430:2;4423:5;4419:14;4406:49;4500:1;4495:2;4486:6;4479:5;4475:18;4471:27;4464:38;4521:5;4511:15;;;;;3603:929;;;;;:::o;5095:183::-;5155:4;5188:18;5180:6;5177:30;5174:56;;;5210:18;;:::i;:::-;-1:-1:-1;5255:1:89;5251:14;5267:4;5247:25;;5095:183::o;5283:1180::-;5385:6;5393;5401;5454:2;5442:9;5433:7;5429:23;5425:32;5422:52;;;5470:1;5467;5460:12;5422:52;5515:23;;;-1:-1:-1;5635:2:89;5620:18;;5607:32;;-1:-1:-1;5716:2:89;5701:18;;5688:32;5743:18;5732:30;;5729:50;;;5775:1;5772;5765:12;5729:50;5798:22;;5851:4;5843:13;;5839:27;-1:-1:-1;5829:55:89;;5880:1;5877;5870:12;5829:55;5920:2;5907:16;5943:64;5959:47;5999:6;5959:47;:::i;5943:64::-;6029:3;6053:6;6048:3;6041:19;6085:2;6080:3;6076:12;6069:19;;6140:2;6130:6;6127:1;6123:14;6119:2;6115:23;6111:32;6097:46;;6166:7;6158:6;6155:19;6152:39;;;6187:1;6184;6177:12;6152:39;6219:2;6215;6211:11;6200:22;;6231:202;6247:6;6242:3;6239:15;6231:202;;;6341:17;;6371:20;;6420:2;6264:12;;;;6411;;;;6231:202;;;6452:5;6442:15;;;;;;5283:1180;;;;;:::o;6468:127::-;6529:10;6524:3;6520:20;6517:1;6510:31;6560:4;6557:1;6550:15;6584:4;6581:1;6574:15;6600:127;6661:10;6656:3;6652:20;6649:1;6642:31;6692:4;6689:1;6682:15;6716:4;6713:1;6706:15;6732:128;6799:9;;;6820:11;;;6817:37;;;6834:18;;:::i;:::-;6732:128;;;;:::o;6865:127::-;6926:10;6921:3;6917:20;6914:1;6907:31;6957:4;6954:1;6947:15;6981:4;6978:1;6971:15;6997:1463;7101:6;7154:2;7142:9;7133:7;7129:23;7125:32;7122:52;;;7170:1;7167;7160:12;7122:52;7203:9;7197:16;7236:18;7228:6;7225:30;7222:50;;;7268:1;7265;7258:12;7222:50;7291:22;;7344:4;7336:13;;7332:27;-1:-1:-1;7322:55:89;;7373:1;7370;7363:12;7322:55;7406:2;7400:9;7429:64;7445:47;7485:6;7445:47;:::i;7429:64::-;7515:3;7539:6;7534:3;7527:19;7571:2;7566:3;7562:12;7555:19;;7626:2;7616:6;7613:1;7609:14;7605:2;7601:23;7597:32;7583:46;;7652:7;7644:6;7641:19;7638:39;;;7673:1;7670;7663:12;7638:39;7705:2;7701;7697:11;7717:713;7733:6;7728:3;7725:15;7717:713;;;7812:3;7806:10;7848:18;7835:11;7832:35;7829:55;;;7880:1;7877;7870:12;7829:55;7907:20;;7962:2;7954:11;;7950:25;-1:-1:-1;7940:53:89;;7989:1;7986;7979:12;7940:53;8036:2;8032;8028:11;8022:18;8068:54;8084:37;8112:8;8084:37;:::i;8068:54::-;8135:25;;;8179:35;8187:17;;;8179:35;8176:48;-1:-1:-1;8173:68:89;;;8237:1;8234;8227:12;8173:68;8291:8;8286:2;8282;8278:11;8273:2;8264:7;8260:16;8254:46;8353:1;8348:2;8337:8;8328:7;8324:22;8320:31;8313:42;8380:7;8375:3;8368:20;;;;8417:2;8412:3;8408:12;8401:19;;7759:2;7754:3;7750:12;7743:19;;7717:713;;;-1:-1:-1;8449:5:89;6997:1463;-1:-1:-1;;;;;;6997:1463:89:o;8465:289::-;8640:6;8629:9;8622:25;8683:2;8678;8667:9;8663:18;8656:30;8603:4;8703:45;8744:2;8733:9;8729:18;8721:6;8703:45;:::i;:::-;8695:53;8465:289;-1:-1:-1;;;;8465:289:89:o;8759:390::-;8835:6;8843;8896:2;8884:9;8875:7;8871:23;8867:32;8864:52;;;8912:1;8909;8902:12;8864:52;8944:9;8938:16;8997:5;8990:13;8983:21;8976:5;8973:32;8963:60;;9019:1;9016;9009:12;8963:60;9113:2;9098:18;;;;9092:25;9042:5;;9092:25;;-1:-1:-1;;;8759:390:89:o;9154:135::-;9193:3;9214:17;;;9211:43;;9234:18;;:::i;:::-;-1:-1:-1;9281:1:89;9270:13;;9154:135::o;9294:230::-;9364:6;9417:2;9405:9;9396:7;9392:23;9388:32;9385:52;;;9433:1;9430;9423:12;9385:52;-1:-1:-1;9478:16:89;;9294:230;-1:-1:-1;9294:230:89:o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "addOwner(bytes32,bytes32)": "2d2156b9",
        "eip712Domain()": "84b0196e",
        "getConfig(address,bytes32)": "01faf36c",
        "initConfig(bytes32,uint256,bytes32[])": "aa32d86b",
        "isValidSignatureWithKeyHash(bytes32,bytes32,bytes)": "8afc93b4",
        "removeOwner(bytes32,bytes32)": "2aca9072",
        "setThreshold(bytes32,uint256)": "a4db7b4d"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ConfigAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeyHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ownerKeyHash\",\"type\":\"bytes32\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"ownerKeyHashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"ownerKeyHashes\",\"type\":\"bytes32[]\"}],\"name\":\"initConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignatureWithKeyHash\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ownerKeyHash\",\"type\":\"bytes32\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ConfigAlreadySet()\":[{\"details\":\"Multisigs cannot be re-initialized.\"}],\"InvalidKeyHash()\":[{\"details\":\"The key hash is invalid.\"}],\"InvalidThreshold()\":[{\"details\":\"The threshold can't be zero.\"}],\"OwnerNotFound()\":[{\"details\":\"The owner key hash was not found in the config.\"}]},\"kind\":\"dev\",\"methods\":{\"addOwner(bytes32,bytes32)\":{\"details\":\"Adds a new owner keyhash to an existing multi-sig config. - Allows duplicates to be added.\"},\"eip712Domain()\":{\"details\":\"See: https://eips.ethereum.org/EIPS/eip-5267 Returns the fields and values that describe the domain separator used for signing. Note: This is just for labelling and offchain verification purposes. This contract does not use EIP712 signatures anywhere else.\"},\"getConfig(address,bytes32)\":{\"details\":\"Returns the threshold and ownerKeyHashes for a given keyHash and account.\"},\"initConfig(bytes32,uint256,bytes32[])\":{\"details\":\"Initialize a new multi-sig config. - This can only be called once per [keyHash][sender] tuple.   enforced by making sure threshold for an initialized key is never returned to 0.\"},\"isValidSignatureWithKeyHash(bytes32,bytes32,bytes)\":{\"details\":\"This function SHOULD only be called by valid IthacaAccounts. - This will iteratively make a call to the address(msg.sender).unwrapAndValidateSignature   for each owner key hash in the config. - Signature of a multi-sig should be encoded as abi.encode(bytes[] memory ownerSignatures) - For efficiency, place the signatures in the same order as the ownerKeyHashes in the config. - Failing owner signatures are ignored, as long as valid signaturs > threshold.\"},\"removeOwner(bytes32,bytes32)\":{\"details\":\"Removes an owner keyhash from an existing multi-sig config. - Throws `OwnerNotFound` if the requested keyhash is not found. - Throws `InvalidThreshold` if the number of owners goes below the threshold after removal.\"},\"setThreshold(bytes32,uint256)\":{\"details\":\"Sets the threshold for an existing multi-sig config. - Throws `InvalidThreshold` if the threshold is 0 or greater than the number of owners.\"}},\"stateVariables\":{\"_FAIL_VALUE\":{\"details\":\"The magic value returned by `isValidSignatureWithKeyHash` when the signature is invalid.\"},\"_MAGIC_VALUE\":{\"details\":\"The magic value returned by `isValidSignatureWithKeyHash` when the signature is valid. - Calcualated as: bytes4(keccak256(\\\"isValidSignatureWithKeyHash(bytes32,bytes32,bytes)\\\")\"},\"_configs\":{\"details\":\"A config is mapped to a tuple of (address, keyhash) This allows a single account, to register multiple multi-sig configs.\"}},\"title\":\"MultiSigSigner\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A Signer contract, that extends multi-sig functionality to the Porto Account.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MultiSigSigner.sol\":\"MultiSigSigner\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-oapp-v2/=lib/LayerZero-v2/packages/layerzero-v2/evm/oapp/\",\":@layerzerolabs/lz-evm-protocol-v2/=lib/LayerZero-v2/packages/layerzero-v2/evm/protocol/\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":LayerZero-v2/=lib/LayerZero-v2/\",\":devtools/=lib/devtools/packages/toolbox-foundry/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"src/MultiSigSigner.sol\":{\"keccak256\":\"0xad5aed7827918a1910b63d21844bb86e80cb9814b06682afe6abdd15b072516f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd4bffb842f76155c8bbb9c34d7b9feba6ba00b7a4a7b56d23c4540e4ff892a\",\"dweb:/ipfs/QmUaRZAX66r69Jp5LHzLaV5fXPfgbYU64VM3xL1WhDkqfC\"]},\"src/interfaces/ICommon.sol\":{\"keccak256\":\"0x6d205dfe6bfb5b4bd4541339769d5d317f238aebb33c34f667422b7497d39980\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7f791a7acc0bbce29bf322e500c5849ab89f9cad6c61e5f42e275df70edd92e\",\"dweb:/ipfs/QmWKQtTu5K7MbML7BSCoqn3mK9hicstTc9GtgtxT48LJYi\"]},\"src/interfaces/IIthacaAccount.sol\":{\"keccak256\":\"0xa89e49ff666b68abb40663cb18b670e65c36b984a835b9af7363b33c5d60104e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d65d8940c79ea723e67032c68e9239dcb2c1d23479f42365427fcc7cb5cce58\",\"dweb:/ipfs/Qmb7Wi1YP1Hhm28Ji4tp1RABubezwU6pyvyCpiab1AvdpD\"]},\"src/interfaces/ISigner.sol\":{\"keccak256\":\"0x78bf0a017b92ddc22c530e9e3dc193650965885819aa47011a70cd6943bbf84a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://388ce68d31ceafe71ed78aa97605d0a63dd60422b3f8c64e9a8dea2732d870af\",\"dweb:/ipfs/QmNV2BdesJHcRp4NDCS1R6D7Y1A7Jv6Hn23DvK2TBLkiva\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ConfigAlreadySet"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidKeyHash"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidThreshold"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "OwnerNotFound"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "keyHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "ownerKeyHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "addOwner"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eip712Domain",
                    "outputs": [
                        {
                            "internalType": "bytes1",
                            "name": "fields",
                            "type": "bytes1"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "version",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "chainId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "verifyingContract",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "extensions",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "keyHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getConfig",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "threshold",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "ownerKeyHashes",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "keyHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "threshold",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "ownerKeyHashes",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initConfig"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "digest",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "keyHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes",
                            "name": "signature",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isValidSignatureWithKeyHash",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "magicValue",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "keyHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "ownerKeyHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "removeOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "keyHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "threshold",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setThreshold"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "addOwner(bytes32,bytes32)": {
                        "details": "Adds a new owner keyhash to an existing multi-sig config. - Allows duplicates to be added."
                    },
                    "eip712Domain()": {
                        "details": "See: https://eips.ethereum.org/EIPS/eip-5267 Returns the fields and values that describe the domain separator used for signing. Note: This is just for labelling and offchain verification purposes. This contract does not use EIP712 signatures anywhere else."
                    },
                    "getConfig(address,bytes32)": {
                        "details": "Returns the threshold and ownerKeyHashes for a given keyHash and account."
                    },
                    "initConfig(bytes32,uint256,bytes32[])": {
                        "details": "Initialize a new multi-sig config. - This can only be called once per [keyHash][sender] tuple.   enforced by making sure threshold for an initialized key is never returned to 0."
                    },
                    "isValidSignatureWithKeyHash(bytes32,bytes32,bytes)": {
                        "details": "This function SHOULD only be called by valid IthacaAccounts. - This will iteratively make a call to the address(msg.sender).unwrapAndValidateSignature   for each owner key hash in the config. - Signature of a multi-sig should be encoded as abi.encode(bytes[] memory ownerSignatures) - For efficiency, place the signatures in the same order as the ownerKeyHashes in the config. - Failing owner signatures are ignored, as long as valid signaturs > threshold."
                    },
                    "removeOwner(bytes32,bytes32)": {
                        "details": "Removes an owner keyhash from an existing multi-sig config. - Throws `OwnerNotFound` if the requested keyhash is not found. - Throws `InvalidThreshold` if the number of owners goes below the threshold after removal."
                    },
                    "setThreshold(bytes32,uint256)": {
                        "details": "Sets the threshold for an existing multi-sig config. - Throws `InvalidThreshold` if the threshold is 0 or greater than the number of owners."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@layerzerolabs/lz-evm-oapp-v2/=lib/LayerZero-v2/packages/layerzero-v2/evm/oapp/",
                "@layerzerolabs/lz-evm-protocol-v2/=lib/LayerZero-v2/packages/layerzero-v2/evm/protocol/",
                "@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "LayerZero-v2/=lib/LayerZero-v2/",
                "devtools/=lib/devtools/packages/toolbox-foundry/src/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "murky/=lib/murky/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "solady/=lib/solady/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "none",
                "appendCBOR": false
            },
            "compilationTarget": {
                "src/MultiSigSigner.sol": "MultiSigSigner"
            },
            "evmVersion": "prague",
            "libraries": {}
        },
        "sources": {
            "src/MultiSigSigner.sol": {
                "keccak256": "0xad5aed7827918a1910b63d21844bb86e80cb9814b06682afe6abdd15b072516f",
                "urls": [
                    "bzz-raw://ffd4bffb842f76155c8bbb9c34d7b9feba6ba00b7a4a7b56d23c4540e4ff892a",
                    "dweb:/ipfs/QmUaRZAX66r69Jp5LHzLaV5fXPfgbYU64VM3xL1WhDkqfC"
                ],
                "license": "MIT"
            },
            "src/interfaces/ICommon.sol": {
                "keccak256": "0x6d205dfe6bfb5b4bd4541339769d5d317f238aebb33c34f667422b7497d39980",
                "urls": [
                    "bzz-raw://a7f791a7acc0bbce29bf322e500c5849ab89f9cad6c61e5f42e275df70edd92e",
                    "dweb:/ipfs/QmWKQtTu5K7MbML7BSCoqn3mK9hicstTc9GtgtxT48LJYi"
                ],
                "license": "MIT"
            },
            "src/interfaces/IIthacaAccount.sol": {
                "keccak256": "0xa89e49ff666b68abb40663cb18b670e65c36b984a835b9af7363b33c5d60104e",
                "urls": [
                    "bzz-raw://5d65d8940c79ea723e67032c68e9239dcb2c1d23479f42365427fcc7cb5cce58",
                    "dweb:/ipfs/Qmb7Wi1YP1Hhm28Ji4tp1RABubezwU6pyvyCpiab1AvdpD"
                ],
                "license": "MIT"
            },
            "src/interfaces/ISigner.sol": {
                "keccak256": "0x78bf0a017b92ddc22c530e9e3dc193650965885819aa47011a70cd6943bbf84a",
                "urls": [
                    "bzz-raw://388ce68d31ceafe71ed78aa97605d0a63dd60422b3f8c64e9a8dea2732d870af",
                    "dweb:/ipfs/QmNV2BdesJHcRp4NDCS1R6D7Y1A7Jv6Hn23DvK2TBLkiva"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 66
}